syntax = "proto3";

package webhookd;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option (gogoproto.goproto_enum_prefix_all) = false;
option go_package = "github.com/webhookd/api-proto-go/webhookd";
option java_multiple_files = true;
option java_outer_classname = "WebhookdApiProto";
option java_package = "com.webhookd";

service WebhookdApi {
  rpc SubscriptionCreate (SubscriptionCreateRequest) returns (SubscriptionInviteResponse);
  rpc SubscriptionInvite (SubscriptionInviteRequest) returns (SubscriptionInviteResponse);
  rpc SubscriptionAccept (SubscriptionAcceptRequest) returns (SubscriptionAcceptResponse);
  rpc Transmit (TransmitRequest) returns (TransmitResponse);
}

message SubscriptionCreateRequest {
  Provider provider = 1;
  string key = 2;
}

message SubscriptionInviteRequest {
  Subscription subscription = 1;
  string name = 2;
}

message SubscriptionInviteResponse {
  Subscription subscription = 1;
  string name = 2;
  string token = 3;
  string accept_url = 4;
}

message SubscriptionAcceptRequest {
  Consumer consumer = 1;
  Subscription subscription = 2;
  string token = 3;
}

message SubscriptionAcceptResponse {
  bool received = 1;
}

message TransmitRequest {
  Provider provider = 1;
  Subscription subscription = 2;
  Message message = 3;
}

message TransmitResponse {
  bool received = 1;
  Message message = 2;
}

enum HttpMethod {
  HTTP_METHOD_UNKNOWN = 0;
  HTTP_METHOD_GET = 1;
  HTTP_METHOD_HEAD = 2;
  HTTP_METHOD_POST = 3;
  HTTP_METHOD_PUT = 4;
  HTTP_METHOD_DELETE = 5;
  HTTP_METHOD_CONNECT = 6;
  HTTP_METHOD_OPTIONS = 7;
  HTTP_METHOD_TRACE = 8;
}

enum State {
  STATE_UNKNOWN = 0;
  STATE_ACTIVE = 1;
  STATE_PAUSED = 2;
  STATE_SUSPENDED = 3;
  STATE_CANCELLED = 4;
  STATE_DELETED = 5;
}

enum Plan {
  PLAN_UNKNOWN = 0;
  PLAN_TRIAL = 1;
  PLAN_FREE = 2;
  PLAN_PAID = 3;
  PLAN_BESPOKE = 4;
}

message Message {
  string id = 1;
  string provider_reference = 2;
  HttpMethod method = 3;
  string body = 4;
  map<string, string> query = 5;
  map<string, string> headers = 6;
}

message Provider {
  string id = 1;
  string name = 2;
  State state = 3;
  Plan plan = 4;
}

message Consumer {
  string id = 1;
  string name = 2;
  State state = 3;
  Plan plan = 4;
}

message Subscription {
  string id = 1;
  string key = 2;
  string name = 3;
  State state = 4;
}

message Destination {
  string id = 1;
  string name = 2;
  string url = 3;
  int32 retry_count = 4;
  string retry_policy = 5;
  map<string, string> headers = 6;
  State state = 7;
}